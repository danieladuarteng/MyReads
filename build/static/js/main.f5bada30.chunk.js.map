{"version":3,"sources":["images/logo.png","icons/add.svg","BooksAPI.js","Book.js","BookShelf.js","ListBooks.js","SearchBooks.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","bookCover","authors","_this$props","this","props","onChange","title","_this$props2","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","value","disabled","React","Component","BookShelf","onChangeShelf","filter","map","key","src_Book","e","shelves","ListBooks","src","logo","alt","Link","to","add","item","src_BookShelf","href","target","rel","SearchBooks","state","result","debounce","_this","setState","trim","length","BooksAPI","response","currentBook","existingBook","find","catch","err","console","log","clearQuery","showingBooks","_this2","_this$state","error","items","type","placeholder","event","onClick","BooksApp","handleChangeShelf","bookToUpdateShelf","updateBooks","b","push","Route","exact","path","render","src_ListBooks","src_SearchBooks","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f5bada30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1329049d.png\";","module.exports = __webpack_public_path__ + \"static/media/add.75d390e5.svg\";","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n\r\n    /*outra forma de tratar o search\r\n    export const search = (query) =>\r\n    fetch(`${api}/search`, {\r\n      method: 'POST',\r\n      headers: {\r\n        ...headers,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ query })\r\n    }).then(res => res.json())\r\n      .then(res => {\r\n        if(res.books.error){\r\n          return []\r\n        }\r\n        return res.books;\r\n      });*/\r\n","import React from 'react'\r\n\r\nclass Book extends React.Component {\r\n    render() {\r\n        const { onChange, shelf, title } = this.props;\r\n\r\n        let { imageLinks, book } = this.props;\r\n\r\n        let bookCover, authors;\r\n\r\n        if (typeof imageLinks === 'undefined') {\r\n            bookCover = '';\r\n        } else {\r\n            bookCover = imageLinks.thumbnail;\r\n        }\r\n\r\n        if (typeof book.authors === 'undefined') {\r\n            authors = 'No authors';\r\n        } else {\r\n            authors = book.authors\r\n        }\r\n\r\n        return (\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{\r\n                        width: 128, height: 193,\r\n                        backgroundImage: `url(${bookCover})`\r\n                    }}></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <select value={shelf} onChange={onChange}>\r\n                            <option value=\"move\" disabled>Move to...</option>\r\n                            <option value=\"currentlyReading\">Currently Reading</option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">None</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-title\">{title}</div>\r\n                <div className=\"book-authors\">{authors}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","import React from 'react'\r\nimport Book from './Book'\r\n\r\nclass BookShelf extends React.Component {\r\n    render() {\r\n        const { shelf, title, books, onChangeShelf } = this.props;\r\n        return (\r\n            <div className=\"list-books-content\">\r\n                <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">{title}</h2>\r\n                    <ol className=\"books-grid\">\r\n                        {books.filter(book => book.shelf === shelf).map(book => (\r\n                            <li key={book.id}>\r\n                                <Book\r\n                                    book={book}\r\n                                    imageLinks={book.imageLinks}\r\n                                    onChange={(e) => onChangeShelf(e, book)}\r\n                                    shelf={book.shelf}\r\n                                    title={book.title}\r\n                                />\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookShelf\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport logo from './images/logo.png'\r\nimport add from './icons/add.svg'\r\nimport BookShelf from './BookShelf'\r\n\r\nconst shelves = [\r\n    {\r\n        title: 'Currently Reading',\r\n        shelf: 'currentlyReading',\r\n    },\r\n    {\r\n        title: 'Want To Read',\r\n        shelf: 'wantToRead',\r\n    },\r\n    {\r\n        title: 'Read',\r\n        shelf: 'read',\r\n    },\r\n];\r\n\r\nclass ListBooks extends Component {\r\n    static propTypes = {\r\n        books: PropTypes.array.isRequired,//aqui falo que minha prop books precisa ser um array\r\n        onChangeShelf: PropTypes.func.isRequired,//e aqui que a onChangeShelf seja uma função\r\n    }\r\n\r\n    render() {\r\n        const { books, onChangeShelf } = this.props\r\n        return (\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <Link\r\n                        to=\"/search\"\r\n                        className=\"link-new-books\"\r\n                    >\r\n                        <div className=\"new-books\">\r\n                            <img src={add} alt=\"add\" />\r\n                            <h1>Search new books</h1>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n\r\n                {shelves.map(item => (\r\n                    <BookShelf\r\n                        key={item.title}\r\n                        books={books}\r\n                        title={item.title}\r\n                        shelf={item.shelf}\r\n                        onChangeShelf={onChangeShelf}\r\n                    />\r\n                ))}\r\n\r\n                <footer>Project Udacity My Reads - Developed by\r\n                    <a\r\n                        href=\"https://github.com/danieladuarteng\"\r\n                        alt=\"GitHub of Daniela Duarte\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >Daniela Duarte - GitHub\r\n                    </a>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListBooks","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Book from './Book'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport { debounce } from 'lodash'\r\n\r\nclass SearchBooks extends Component {\r\n    static propTypes = {\r\n        books: PropTypes.array.isRequired,//aqui falo que minha prop books precisa ser um array\r\n        onChangeShelf: PropTypes.func.isRequired,//e aqui que a onChangeShelf seja uma função\r\n    }\r\n\r\n    state = {\r\n        query: '',\r\n        result: [],\r\n    }\r\n\r\n    search = debounce((query) => {\r\n        this.setState({ query });\r\n        if (query.trim().length) {\r\n            BooksAPI.search(query.trim()).then((response) => {\r\n                let search = response.map(currentBook => {\r\n                    let existingBook = this.props.books.find(book => book.id === currentBook.id)\r\n                    if (existingBook) {\r\n                        currentBook.shelf = existingBook.shelf\r\n                    } else {\r\n                        currentBook.shelf = 'none'\r\n                    }\r\n                    return currentBook;\r\n                })\r\n                this.setState({ result: search })\r\n            }).catch((err) => {\r\n                this.setState({\r\n                    result: [],\r\n                })\r\n            })\r\n        } else {\r\n            console.log('Empty')\r\n            this.setState({\r\n                result: [],\r\n            })\r\n        }\r\n    }, 100);\r\n\r\n    clearQuery = () => {\r\n        this.setState({ query: '' })\r\n    }\r\n\r\n    render() {\r\n        const { onChangeShelf, books } = this.props\r\n        const { query, result } = this.state\r\n\r\n        let showingBooks\r\n\r\n        if (this.state.query) {\r\n            showingBooks = result.error ? result.items : result;\r\n        } else {\r\n            showingBooks = books\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"list-books\" >\r\n                    <div className=\"list-books-title-search\">\r\n                        <h1>Search</h1>\r\n                    </div>\r\n                    <div className=\"list-books-content\">\r\n                        <div>\r\n                            <div className='search-books-bar'>\r\n                                <Link className='close-search' to=\"/\">Close</Link>\r\n                                <input\r\n                                    className='search-books-bar'\r\n                                    type='text'\r\n                                    placeholder='Search new books'\r\n                                    value={query}\r\n                                    onChange={(event) => this.search(event.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            {!showingBooks.length && (\r\n                                <div className='message-error'>\r\n                                    <p>We didn't find anything. Please try again with words:</p>\r\n                                    <p>   'Android',\r\n                                        'Art', 'Artificial Intelligence', 'Astronomy',\r\n                                        'Austen', 'Baseball', 'Basketball', 'Bhagat',\r\n                                        'Biography', 'Brief', 'Business', 'Camus',\r\n                                        'Cervantes', 'Christie', 'Classics', 'Comics',\r\n                                        'Cook', 'Cricket', 'Cycling', 'Desai', 'Design',\r\n                                        'Development', 'Digital Marketing', 'Drama',\r\n                                        'Drawing', 'Dumas', 'Education', 'Everything',\r\n                                        'Fantasy', 'Film', 'Finance', 'First', 'Fitness',\r\n                                        'Football', 'Future', 'Games', 'Gandhi', 'Homer',\r\n                                        'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King',\r\n                                        'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make',\r\n                                        'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting',\r\n                                        'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming',\r\n                                        'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire',\r\n                                        'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale',\r\n                                        'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality',\r\n                                        'Web Development', 'iOS'\r\n                                </p>\r\n                                </div>\r\n                            )}\r\n\r\n                            {showingBooks.length !== books.length && (\r\n                                <div className='showing-contacts'>\r\n                                    <h2>Now showing {showingBooks.length}</h2>\r\n                                    <button onClick={this.clearQuery}>Show all</button>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"bookshelf\">\r\n                                <div className=\"bookshelf-books\">\r\n                                    <ol className=\"books-grid\">\r\n                                        {showingBooks && showingBooks.map((book) => (\r\n                                            <li key={book.id}>\r\n                                                <Book\r\n                                                    book={book}\r\n                                                    imageLinks={book.imageLinks}\r\n                                                    onChange={(e) => onChangeShelf(e, book)}\r\n                                                    shelf={book.shelf}\r\n                                                    title={book.title}\r\n                                                />\r\n                                            </li>\r\n                                        ))}\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <footer>Project Udacity My Reads - Developed by\r\n            <a\r\n                        href=\"https://github.com/danieladuarteng\"\r\n                        alt=\"GitHub of Daniela Duarte\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >Daniela Duarte - GitHub\r\n            </a>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBooks","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport ListBooks from './ListBooks'\r\nimport SearchBooks from './SearchBooks'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {//colocamos no state para que o React gerencie as atualizações \r\n    books: [],\r\n  }\r\n\r\n  async componentDidMount() {//deixa de forma assincrona\r\n    const books = await BooksAPI.getAll()//fala para esperar até pegar todos os dados\r\n      this.setState({ books })\r\n  }\r\n\r\n  handleChangeShelf = (e, bookToUpdateShelf) => {\r\n    const shelf = e.target.value;\r\n    bookToUpdateShelf.shelf = shelf;\r\n\r\n    this.setState((state) => {\r\n      BooksAPI.update(bookToUpdateShelf, shelf).then(response => {\r\n        bookToUpdateShelf.shelf = shelf;\r\n        const updateBooks = state.books.filter((b) => b.id !== bookToUpdateShelf.id)\r\n        updateBooks.push(bookToUpdateShelf)\r\n\r\n        this.setState({\r\n          books: updateBooks\r\n        })\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path=\"/\" e render={() => (\r\n          <ListBooks\r\n            books={this.state.books}\r\n            onChangeShelf={this.handleChangeShelf}\r\n          />\r\n        )} />\r\n\r\n        <Route path=\"/search\" render={() => (\r\n          <SearchBooks\r\n            books={this.state.books}\r\n            onChangeShelf={this.handleChangeShelf}\r\n          />\r\n        )} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter><App /></BrowserRouter>, \r\n    document.getElementById('root'))\r\n"],"sourceRoot":""}